#Tic Tac Toe
board=["-" ,"-" ,"-" ,
       "-" ,"-" ,"-" 
      ,"-" ,"-" ,"-",]
game_is_over=True
winner ="none"

def board_display():
  print(board[0] + '|' +board[1] + '|'+board[2])
  print(board[3] + '|' +board[4] + '|'+board[5])
  print(board[6] + '|' +board[7] + '|'+board[8])
winner="X"
current_player="X"

#game loop is executing :
def play_game():
  board_display()
  global game_is_over
  while(game_is_over):
    game_handle(current_player)
    game_decision()
    player_flip()
  if (winner == "X" or winner == "O"):
    print(winner +". won the match")
  elif (winner==None):
    print("match got tie")
  else:
    print()


#game played here:
def game_handle(current_player):
  position=input('enter your position between 1 to 9: ')
  while position not in ["1","2","3","4","5","6","7","8","9"]:
    position=input('enter your position between 1 to 9: ')

  position=int(position)-1
  board[position]=current_player
  board_display()


#game decision is taken here:
def game_decision():
  game_tie()
  game_win()


#checking the condition of the game :
def game_win():
  rowcheck=row_check()
  coloumncheck=coloumn_check()
  diagonalcheck=diagonal_check()
  if(rowcheck):
    winner=row_check()
  elif(coloumncheck):
    winner=coloumn_check()
  elif(diagonalcheck):
    winner=diagonal_check()
#checking the condition :


def row_check():
  global game_is_over
  row1=board[0]==board[1]==board[2]!="-"
  row2=board[3]==board[4]==board[5] !="-"
  row3=board[6]==board[7]==board[8] !="-"
  if (row1 or row2 or row3):
    game_is_over=False
  elif row1:
    return board[0]
  elif row2 :
    return board[3]
  elif row3:
    return board[6]



def coloumn_check():
  global game_is_over
  col1=board[0]==board[3]==board[6]!="-"
  col2=board[1]==board[4]==board[7] !="-"
  col3=board[2]==board[5]==board[8] !="-"
  if(col1 or col2 or col3):
    game_is_over=False
  elif col1:
    return board[0]
  elif col2:
    return board[4]
  elif col3 :
    return board[2]


def diagonal_check():
  global game_is_over
  diag1=board[0]==board[4]==board[8]!="-"
  diag2=board[2]==board[4]==board[6] !="-"
  if (diag1 or diag2):
    game_is_over=False
  elif diag1:
    return board[0]
  elif diag2:
    return board[6]


def game_tie():
  if "-" not in board:
    print("Game is Tie :")
def player_flip():
  global current_player
  if (current_player=="X"):
    current_player="O"
  elif(current_player=="O"):
    current_player="X"
  print("second player {} Turns :".format(current_player))
  return
play_game()


